buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

if (isAppengineTask()) {
    apply plugin: 'com.google.cloud.tools.appengine'
}

group = 'com.computas.cx-cloud-101.gcp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    providedRuntime
}

ext {
    springCloudGcpVersion = '1.1.0.M2'
    springCloudVersion = 'Greenwich.M1'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('org.springframework.cloud:spring-cloud-gcp-starter-pubsub')
    compile('org.springframework.cloud:spring-cloud-gcp-starter-data-datastore')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

if (isAppengineTask()) {
    appengine {
        deploy {
            version = 'GCLOUD_CONFIG'
            projectId = 'GCLOUD_CONFIG'
        }
    }
}

boolean isAppengineTask() {
    return getGradle().getStartParameter().getTaskRequests().toString().contains("appengine");
}
